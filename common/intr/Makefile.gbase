#
# Copyright (C) 2001 Tensilica, Inc.  All Rights Reserved.
# Revised to support Tensilica processors and to improve overall performance
#
#  Copyright (C) 2000 Silicon Graphics, Inc.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

#
#  Makefile.base for intrinsics header files
#

#----------------------------------------------------------------------
#  Set environment variables
#
#  TARGDIR   :  is the targ specific directory in which we do build. 
#               e.g.  /cmplrs.src/v7.00/targ32
#
#----------------------------------------------------------------------
TARGDIR = $(BUILD_AREA)
CURDIR  = .

#----------------------------------------------------------------------
#  Include the usual commondefs
#----------------------------------------------------------------------
include $(COMMONDEFS)

#----------------------------------------------------------------------
#  Set environment variables
#----------------------------------------------------------------------
ifeq ($(BUILD_COMPILER), EDG)
CVERSION = -xansi
WOFF = -fullwarn
else
CVERSION =
WOFF =
endif

RUN =
ifeq ($(BUILD_ARCH), IA64)
  ifeq ($(BUILD_HOSTARCH), IA32)
    RUN = medusa -batch
  endif
endif

#----------------------------------------------------------------------
#  Compiler Options
#----------------------------------------------------------------------

ifeq ($(BUILD_ABI), N32BIT)
HOST_CC = $(CC) -n32 -mips3 -woff 1185 $(CINCS) $(CDEFS) $(MKDEPOPT)
HOST_CXX = $(C++) -n32 -mips3 $(CXXINCS) $(CXXDEFS) $(MKDEPOPT)
else
HOST_CC = $(CC) $(CINCS) $(CDEFS) $(MKDEPOPT)
HOST_CXX = $(C++) $(CXXINCS) $(CXXDEFS) $(MKDEPOPT)
endif

# Optionally remove "-MDupdate Makedepend" from link lines so executables
# don't get rebuilt every time LATEST libC etc. changes
ifdef BUILD_EXEC_NO_MAKEDEPEND
HOST_LD_CC1 = $(HOST_CC:N-MDupdate)
HOST_LD_CC = $(HOST_LD_CC1:NMakedepend)
HOST_LD_CXX1 = $(HOST_CXX:N-MDupdate)
HOST_LD_CXX = $(HOST_LD_CXX1:NMakedepend)
else
HOST_LD_CC = $(HOST_CC)
HOST_LD_CXX = $(HOST_CXX)
endif

HOSTDEFS += -Dlonglong
HOSTDEFS += -DSGI_RAG_BACKEND
HOSTDEFS += -DSGI_MONGOOSE
HOSTDEFS += -DSGI_EXTENSIONS

ifeq ($(BUILD_OPTIMIZE), DEBUG)
HOSTDEFS += -DIs_True_On
HOSTDEFS += -DInsist_On 
endif

ifeq ($(BUILD_OS), IRIX)
DIFF = $(TOOLROOT)/bin/diff
else
DIFF = diff
endif

#----------------------------------------------------------------------
#  List of directories, and source files of interest
#----------------------------------------------------------------------

INTR_DIR 		= $(BUILD_BASE)
COMMON_COM_DIR 		= $(BUILD_TOT)/common/com
COMMON_TARG_INFO_DIR	= $(BUILD_TOT)/common/target_info
COMMON_COM_TARG_DIR	= $(COMMON_TARG_INFO_DIR)/static/common/com/$(BUILD_TARGET_DIR)
COMMON_LIB_DIR 		= $(BUILD_TOT)/common/lib
COMMON_UTIL_DIR		= $(BUILD_TOT)/common/util
ifeq ($(BUILD_OS), IRIX)
INCLUDE_DIR 		= $(ROOT)/usr/include
endif

# These are the directories in which to look for source files.

RAG_DIRS = \
  $(CURDIR)		\
  $(INTR_DIR)		\
  $(COMMON_UTIL_DIR)	\
  $(COMMON_COM_DIR)	\
  $(COMMON_COM_TARG_DIR)\
  $(COMMON_LIB_DIR)	\
  $(INCLUDE_DIR)


#VPATH    =  $(RAG_DIRS)

LCDEFS = $(HOSTDEFS) $(TARGDEFS)
LCINCS = $(addprefix -I, $(RAG_DIRS))
ifneq ($(BUILD_VARIANT), QUAD_SUPPORT)
LCDEFS += -DBUILD_USING_UCODE
endif

LCXXDEFS = $(LCDEFS)
LCXXINCS = $(LCINCS)

# setup stuff to build shared or non-shared
GLDOPTS = $(STD_LOAD_OPTS)

LDIRT = intr_table.tmp* wint_tool

#------------------------------------------------------------
#  Define target
#------------------------------------------------------------
TARGETS = 

default: $(TARGETS)

wtable.h: $(INTR_DIR)/wtable.h
	cp $(INTR_DIR)/wtable.h .
	chmod a+w wtable.h

#----------------------------------------------------------------------
#  The commands in this section are done BEFORE any other target is 
#  built.
#----------------------------------------------------------------------
first:
ifeq ($(BUILD_OS), LINUX)
	cd $(BUILD_AREA)/include && $(MAKE)
endif

#----------------------------------------------------------------------
#  The commands in this section are done AFTER every other target is 
#  built.
#----------------------------------------------------------------------

install: default

last: 
#----------------------------------------------------------------------
#  Include the usual commonrules
#----------------------------------------------------------------------
include $(COMMONRULES)
