%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 295 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
% The following commented out code did not work for tangent lines of zero
% length.  The code following it was provided by Frame to patch this error.
%
%/RR { 
%	/rad exch def
%	normalize
%	/y2 exch def
%	/x2 exch def
%	normalize
%	/y1 exch def
%	/x1 exch def
%	newpath
%	x1 y1 rad add moveto
%	x1 y2 x2 y2 rad arcto
%	x2 y2 x2 y1 rad arcto
%	x2 y1 x1 y1 rad arcto
%	x1 y1 x1 y2 rad arcto
%	closepath
%	16 {pop} repeat
%	} bind def
/rarc
    {rad
     {arcto} stopped
    } bind def
/RR {
    /rad exch def
    normalize
    /y2 exch def
    /x2 exch def
    normalize
    /y1 exch def
    /x1 exch def
    mark
    newpath
    x1 y1 rad add moveto
    x1 y2 x2 y2 rarc
    x2 y2 x2 y1 rarc
    x2 y1 x1 y1 rarc
 %   x2 y1 x1 y1 rarc
    x1 y1 x1 y2 rarc
    closepath
    cleartomark
    } bind def

/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/cip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        cris indx placer 255 mul cvi put
        cgis indx placeg 255 mul cvi put
        cbis indx placeb 255 mul cvi put
    } for pop cris

	
	} bind def
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
    currentcolortransfer
    /gryt exch def
    /blut exch def
    /grnt exch def
    /redt exch def
    0 1 255 {
        /indx exch def
        /cynu 1 red indx get 255 div sub def
        /magu 1 green indx get 255 div sub def
        /yelu 1 blue indx get 255 div sub def
        /k cynu magu min yelu min def
        nredt indx 1 0 cynu max sub redt exec put
        ngreent indx 1 0 magu max sub grnt exec put
        nbluet indx 1 0 yelu max sub blut exec put
        ngrayt indx 1 k sub gryt exec put
    } for
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
    /ris w d wbytes string def
    /gis w d wbytes string def
    /bis w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop
    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        ris indx placer 255 mul cvi put
        gis indx placeg 255 mul cvi put
        bis indx placeb 255 mul cvi put
    } for pop ris}
	{gis} {bis} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
    /cris lb string def
    /cgis lb string def
    /cbis lb string def
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cip} {cgis} {cbis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 14 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Helvetica FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /Times-Roman FMFONTDEFINE
4 0 /Times-Bold FMFONTDEFINE
5 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "5" 5
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Linkage Conventions) 207 736.18 T
0 7 Q
(Page) 533.8 736.18 T
0 9 Q
( 5) 550.5 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
0 10 Q
0 X
(2/21/95) 71.25 61.04 T
0 -13 -14 95 14 108 28 450 44 FMBEGINEPSF
%%BeginDocument: /home/rohit/workarea/v7.00/doc/Mongoose/templates/sgilogo.epsf
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-13 -14 95 14
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin



%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def

    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value

    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value

    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value

    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value

    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value

    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value

    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 -
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def

    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick -
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def


    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def

    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def

    newpath
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 11 Q
0 X
(// -*-C++-*-) 252 678.68 T
2 7 Q
(l) 216 663.02 T
3 12 Q
(A header \336le for C-code \050i.e. contains no C++ constructs, and cor-) 237.6 663.02 T
(responds to code de\336ned in a C-\336le\051 must be prepared within an) 237.6 649.02 T
1 F
(extern \322C\323) 237.6 635.02 T
3 F
(speci\336er as follows.) 294.24 635.02 T
1 11 Q
(#ifdef __cplusplus) 252 615.68 T
(extern \322C\323 {) 252 597.68 T
(#endif) 252 579.68 T
(\245 \245 \245) 252 561.68 T
(#include <foobar) 252 543.68 T
(.h>) 332.92 543.68 T
(\245 \245 \245) 252 525.68 T
(#ifdef __cplusplus) 252 507.68 T
(}) 252 489.68 T
(#endif) 252 471.68 T
FMENDPAGE
%%EndPage: "5" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 7 Q
0 X
(Page) 515.8 736.18 T
0 9 Q
( 4) 532.5 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
0 -13 -14 95 14 108 28 54 45 FMBEGINEPSF
%%BeginDocument: /home/rohit/workarea/v7.00/doc/Mongoose/templates/sgilogo.epsf
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-13 -14 95 14
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin



%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def

    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value

    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value

    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value

    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value

    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value

    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value

    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 -
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def

    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick -
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def


    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def

    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def

    newpath
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 55.55 540 67.5 R
7 X
V
0 10 Q
0 X
(2/21/95) 506.66 60.83 T
54 87.98 540 686.02 R
7 X
V
4 14 Q
0 X
(4.3) 162.51 676.68 T
(Exceptions) 189 676.68 T
3 12 Q
(Using C++ exception handling facilities is disallowed.) 189 658.02 T
54 609.99 540 613.02 C
189 611.5 540 611.5 2 L
0.25 H
2 Z
0 X
0 K
N
54 611.5 180 611.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 5) 118.26 618.35 T
(Memory Allocation/Deallocation) 189 618.35 T
3 12 Q
(All heap-allocated memory must be allocated/deallocated shown below) 189 587.99 T
(.) 530.97 587.99 T
(\050As in C++, constructors/destructors are automatically invoked\051.) 189 573.99 T
4 F
(Allocating memory:) 189 547.99 T
2 7 Q
(l) 198 527.99 T
1 12 Q
(x = CXX_NEW \050type, mempool\051;) 219.6 527.99 T
3 F
(Instead of) 219.6 510.99 T
1 F
(x = new type;) 270.22 510.99 T
3 F
(Allocate an instance of \324type\325 from the \324mempool\325.) 219.6 493.99 T
(Ar) 219.6 476.99 T
(guments may be passed to a contructor within this scheme:) 232.04 476.99 T
1 F
(x = CXX_NEW \050type \050a1, a2\051, mempool\051;) 219.6 459.99 T
3 F
(instead of) 219.6 442.99 T
1 F
(x = new type \050a1, a2\051;) 269.57 442.99 T
2 7 Q
(l) 198 425.99 T
1 12 Q
(x = CXX_NEW_ARRA) 219.6 425.99 T
(Y \050type, num_elements, mempool\051;) 337.67 425.99 T
3 F
(Instead of) 219.6 408.99 T
1 F
(x = new type[num_elements];) 270.22 408.99 T
3 F
(Allocate an array of \324num_elements\325 of \324type\325 from \324mempool\325.) 219.6 391.99 T
4 F
(Deallocating memory:) 189 365.99 T
2 7 Q
(l) 198 345.99 T
1 12 Q
(CXX_DELETE\050pointer) 219.6 345.99 T
(, mempool\051;) 337.58 345.99 T
3 F
(Instead of) 219.6 328.99 T
1 F
(delete pointer;) 270.22 328.99 T
3 F
(Deallocate the object pointed to by \324pointer) 219.6 311.99 T
(\325 into \324mempool\325.) 428.56 311.99 T
2 7 Q
(l) 198 294.99 T
1 12 Q
(CXX_DELETE_ARRA) 219.6 294.99 T
(Y\050pointer) 336.68 294.99 T
(, mempool\051;) 384.68 294.99 T
3 F
(Instead of) 219.6 277.99 T
1 F
(delete [] pointer;) 270.22 277.99 T
3 F
(Deallocate the array pointed to by \324pointer) 219.6 260.99 T
(\325 into \324mempool\325.) 423.88 260.99 T
(A mempool value of 0 implies that allocate/deallocate the data from the) 189 234.99 T
(default mempool. The default mempool can be set by the call:) 189 220.99 T
2 7 Q
(l) 198 200.99 T
1 12 Q
(CXX_SET_DEF) 219.6 200.99 T
(AUL) 304.25 200.99 T
(T_MEMPOOL \050mempool\051) 326.69 200.99 T
54 152.97 540 155.99 C
189 154.48 540 154.48 2 L
0.25 H
2 Z
0 X
0 K
N
54 154.48 180 154.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 6) 118.26 161.33 T
(Linkage Conventions) 189 161.33 T
2 7 Q
(l) 198 134.97 T
3 12 Q
(Names of C++ header \336les have the) 219.6 134.97 T
0 F
(.h) 394.67 134.97 T
3 F
( extension, while names of) 405.33 134.97 T
(C++ code \336les have the) 219.6 120.97 T
0 F
(.cxx) 336.06 120.97 T
3 F
( extension.) 359.39 120.97 T
2 7 Q
(l) 198 103.97 T
3 12 Q
(The \336rst line in each C++ code or header \336le must be:) 219.6 103.97 T
FMENDPAGE
%%EndPage: "4" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
0 9 Q
0 X
(Inheritance) 207 736.18 T
0 7 Q
(Page) 533.8 736.18 T
0 9 Q
( 3) 550.5 736.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
0 10 Q
0 X
(2/21/95) 71.25 61.04 T
0 -13 -14 95 14 108 28 450 44 FMBEGINEPSF
%%BeginDocument: /home/rohit/workarea/v7.00/doc/Mongoose/templates/sgilogo.epsf
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-13 -14 95 14
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin



%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def

    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value

    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value

    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value

    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value

    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value

    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value

    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 -
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def

    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick -
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def


    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def

    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def

    newpath
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
72 666.99 558 670.02 C
207 668.5 558 668.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 668.5 198 668.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 3) 136.26 675.35 T
(Inheritance) 207 675.35 T
3 12 Q
(Inheritance is disallowed in all but the following case. A library of base) 207 644.99 T
(classes is provided, and derivation is allowed only from these standard) 207 630.99 T
(classes. The user cannot de\336ne a base class, and cannot derive from any-) 207 616.99 T
(thing other than a class in the base class library) 207 602.99 T
(. An inheritance chain is) 432.39 602.99 T
(therefore at most one-level deep. Multiple inheritance is disallowed.) 207 588.99 T
(The library currently includes a base class for singly-linked lists of) 207 562.99 T
(nodes, and a base class for iterators. T) 207 548.99 T
(o add a class to the base class li-) 389.01 548.99 T
(brary) 207 534.99 T
(, be sure to circulate a description of the proposed base class within) 231.53 534.99 T
-0.26 (the compiler group to ensure that it meets common requirements. In such) 207 520.99 P
(a base class:) 207 506.99 T
2 7 Q
(l) 216 486.99 T
3 12 Q
(All member \336elds must be declared private; this prevents derived) 237.6 486.99 T
(classes from depending on the implementation of the base class.) 237.6 472.99 T
2 7 Q
(l) 216 455.99 T
3 12 Q
(A base class cannot declare friend functions.) 237.6 455.99 T
2 7 Q
(l) 216 438.99 T
3 12 Q
-0.24 (The interface to the class de\336nition must be documented suf) 237.6 438.99 P
-0.24 (\336cient-) 524.02 438.99 P
(ly that others can use the base class without needing to know the) 237.6 424.99 T
(implementation.) 237.6 410.99 T
72 362.97 558 365.99 C
207 364.48 558 364.48 2 L
0.25 H
2 Z
0 X
0 K
N
72 364.48 198 364.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 4) 136.26 371.33 T
(Other C++ Featur) 207 371.33 T
(es) 331.52 371.33 T
4 14 Q
(4.1) 180.51 333.64 T
(Constant T) 207 333.64 T
(ypes) 273.21 333.64 T
2 7 Q
(l) 216 314.97 T
3 12 Q
-0.34 (An object pointed to by a pointer function parameter must be const) 237.6 314.97 P
(quali\336ed whenever the object is not modi\336ed by the function. Oth-) 237.6 300.97 T
(erwise, it is assumed that the object may be modi\336ed by the func-) 237.6 286.97 T
(tion.) 237.6 272.97 T
2 7 Q
(l) 216 255.97 T
3 12 Q
( An) 237.6 255.97 T
(object \322pointed to\323 by a reference function parameter must be) 258.25 255.97 T
(const) 237.6 241.97 T
(quali\336ed, and must not be modi\336ed in the function. That is,) 265.92 241.97 T
(only foo\050const T& a\051 is allowed. foo\050T& a\051 is disallowed.) 237.6 227.97 T
2 7 Q
(l) 216 210.97 T
3 12 Q
(Member functions of a class that do not modify the object should) 237.6 210.97 T
(be declared const.) 237.6 196.97 T
4 14 Q
(4.2) 180.51 163.64 T
(Refer) 207 163.64 T
(ences) 240.15 163.64 T
3 12 Q
(Reference types may be used only as \050a\051 the formal parameter type of a) 207 136.97 T
(function, and \050b\051 the return value of functions. Furthermore, objects that) 207 122.97 T
-0.08 (are passed by reference must be const, maintaining pass-by-value seman-) 207 108.97 P
(tics. If the ar) 207 94.97 T
(gument is modi\336ed by the function, use explicit pointers.) 267.4 94.97 T
FMENDPAGE
%%EndPage: "3" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 7 Q
0 X
(Page) 515.8 736.18 T
0 9 Q
( 2) 532.5 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
0 -13 -14 95 14 108 28 54 45 FMBEGINEPSF
%%BeginDocument: /home/rohit/workarea/v7.00/doc/Mongoose/templates/sgilogo.epsf
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-13 -14 95 14
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin



%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def

    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value

    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value

    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value

    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value

    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value

    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value

    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 -
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def

    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick -
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def


    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def

    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def

    newpath
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 55.55 540 67.5 R
7 X
V
0 10 Q
0 X
(2/21/95) 506.66 60.83 T
54 87.98 540 686.02 R
7 X
V
3 12 Q
0 X
-0.39 (you use them. It is recommended that these operators be declared private,) 189 678.02 P
(since inadvertent usage will result in a compile-time error) 189 664.02 T
(.) 465.47 664.02 T
1 11 Q
(class C {) 216 644.68 T
(\245 \245 \245) 234 626.68 T
(private:) 216 608.68 T
(\245 \245 \245) 234 590.68 T
(C\050void\051;) 234 572.68 T
(C\050const C&\051;) 234 554.68 T
(C& operator = \050const C&\051;) 234 536.68 T
(~C \050void\051;) 234 518.68 T
(};) 216 500.68 T
4 14 Q
(2.3) 162.51 468.68 T
(Printing) 189 468.68 T
3 12 Q
(All classes should provide a method to print the object in some reason-) 189 450.02 T
(able fashion as follows:) 189 436.02 T
1 11 Q
(class C {) 216 416.68 T
(\245 \245 \245) 234 398.68 T
(public:) 216 380.68 T
(\245 \245 \245) 234 362.68 T
(void Print \050FILE*\051 const {) 234 344.68 T
5 F
(\245 \245 \245 print the contents of the class \245 \245 \245) 252 330.68 T
1 F
(}) 234 312.68 T
(};) 216 294.68 T
4 14 Q
(2.4) 162.51 262.68 T
(Naming) 189 262.68 T
3 12 Q
(Following Ragnarok, use the following convention to name the compo-) 189 236.02 T
(nents of a class:) 189 222.02 T
2 7 Q
(l) 198 202.02 T
3 12 Q
(use all upper) 219.6 202.02 T
(-case letters for class names.) 280.65 202.02 T
2 7 Q
(l) 198 185.02 T
3 12 Q
(use lower) 219.6 185.02 T
(-case letters but starting with a capital letter for member) 265.65 185.02 T
(functions. Capitalize after each underscore - i.e. use Add_Column) 219.6 171.02 T
(rather than Add_column.) 219.6 157.02 T
2 7 Q
(l) 198 140.02 T
3 12 Q
(use all lower) 219.6 140.02 T
(-case letters for member \336elds.) 280.65 140.02 T
2 7 Q
(l) 198 123.02 T
3 12 Q
(begin the name of non-public member \336elds with a leading under-) 219.6 123.02 T
(score \050\324_\325\051.) 219.6 109.02 T
FMENDPAGE
%%EndPage: "2" 1
%%Page: "1" 1
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 445.03 558 445.03 2 L
7 X
V
2 Z
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
0.25 H
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
0 10 Q
0 X
(2/21/95) 71.25 61.04 T
0 -13 -14 95 14 108 28 450 45 FMBEGINEPSF
%%BeginDocument: /home/rohit/workarea/v7.00/doc/Mongoose/templates/sgilogo.epsf
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-13 -14 95 14
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin



%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def

    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value

    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value

    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value

    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value

    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value

    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value

    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 -
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def

    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick -
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def


    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def

    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def

    newpath
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 468 558 693 R
7 X
V
4 12 Q
0 X
1.2 (Memo:) 135 673 S
3 30 Q
(C++ Coding Rules) 207 673 T
4 12 Q
1.2 (Fr) 135 619 S
1.2 (om:) 149.84 619 S
3 18 Q
(Rohit Chandra) 207 619 T
4 12 Q
1.2 (T) 135 587 S
1.2 (o:) 143.1 587 S
3 18 Q
(Mongoosers) 207 587 T
4 12 Q
1.2 (Date:) 135 555 S
3 18 Q
(February 21, 1995) 207 555 T
72 87.98 558 432 R
7 X
V
72 412.98 558 416 C
207 414.49 558 414.49 2 L
0.25 H
2 Z
0 X
0 K
N
72 414.49 198 414.49 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 1) 136.26 421.33 T
(Intr) 207 421.33 T
(oduction) 234.25 421.33 T
3 12 Q
(This document describes the rules for coding in C++ within the Mon-) 207 390.98 T
-0.12 (goose compiler) 207 376.98 P
-0.12 (. The document focuses only the features speci\336c to C++,) 279.84 376.98 P
(and should be used as an extension of the Ragnarok coding style docu-) 207 362.98 T
(ment.) 207 348.98 T
72 300.95 558 303.98 C
207 302.46 558 302.46 2 L
0.25 H
2 Z
0 X
0 K
N
72 302.46 198 302.46 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(Section 2) 136.26 309.31 T
(Classes) 207 309.31 T
4 14 Q
(2.1) 180.51 271.62 T
(Member Fields) 207 271.62 T
3 12 Q
(In general, try to avoid having public member \336elds, and instead declare) 207 244.95 T
(them as private. Use inlined public functions to access these private) 207 230.95 T
(\336elds.) 207 216.95 T
4 14 Q
(2.2) 180.51 183.62 T
(Operators) 207 183.62 T
3 12 Q
(Declare the following constructors/operators for every class. These oper-) 207 164.95 T
-0.12 (ators have a default de\336nition if you don\325) 207 150.95 P
-0.12 (t provide one. Therefore, this is) 404.82 150.95 P
-0.23 (useful in detecting careless errors such as assigning one object to another) 207 136.95 P
(when the operation doesn\325) 207 122.95 T
(t make sense. Note that you don\325) 333.69 122.95 T
(t have to pro-) 491.03 122.95 T
(vide the methods de\336nitions, since you will get a link-time error only if) 207 108.95 T
FMENDPAGE
%%EndPage: "1" 0
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 5 -1
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%+ ZapfDingbats
%%+ Times-Roman
%%+ Times-Bold
%%+ Times-Italic
